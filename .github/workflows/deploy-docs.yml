name: Deploy Documentation to GitHub Pages

on:
  push:
    branches:
      - docs-zh-tw
    paths:
      - 'docs/**'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
  # Allow manual triggering of the workflow
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: |
          npm install -g @vuepress/cli vuepress
          # Alternative: you can use other static site generators like MkDocs, Docusaurus, etc.

      - name: Create VuePress config
        run: |
          mkdir -p docs/.vuepress
          cat > docs/.vuepress/config.js << 'EOF'
          export default {
            title: 'Gemini CLI Documentation',
            description: 'Comprehensive guide to installing, using, and developing Gemini CLI',
            base: '/gemini-cli/',
            themeConfig: {
              nav: [
                { text: 'Home', link: '/' },
                { text: 'CLI', link: '/cli/' },
                { text: 'Core', link: '/core/' },
                { text: 'Tools', link: '/tools/' },
                { text: 'Contributing', link: '/CONTRIBUTING.html' }
              ],
              sidebar: {
                '/': [
                  '',
                  'deployment',
                  'architecture',
                  'checkpointing',
                  'extension',
                  'telemetry',
                  'troubleshooting',
                  'tos-privacy'
                ],
                '/cli/': [
                  'cli/',
                  'cli/commands',
                  'cli/configuration',
                  'cli/authentication',
                  'cli/themes',
                  'cli/token-caching',
                  'cli/tutorials'
                ],
                '/core/': [
                  'core/',
                  'core/tools-api'
                ],
                '/tools/': [
                  'tools/',
                  'tools/file-system',
                  'tools/multi-file',
                  'tools/shell',
                  'tools/web-fetch',
                  'tools/web-search',
                  'tools/memory',
                  'tools/mcp-server'
                ]
              }
            }
          }
          EOF

      - name: Copy CONTRIBUTING.md to docs
        run: cp CONTRIBUTING.md docs/

      - name: Build with VuePress
        run: |
          cd docs
          vuepress build .
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vuepress/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
