name: Codex Runner

on:
  issue_comment:
    types:
      - created

jobs:
  codex:
    if: startsWith(github.event.comment.body, '/codex')
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install Codex CLI (Rust)
        run: |
          npm install -g @openai/codex
          echo "Codex CLI installed successfully"
          echo ""
          echo "Codex CLI version: $(codex --version)"

      - name: System information
        run: uname -mprs

      - id: run-codex
        name: Run Codex
        run: |
          BODY="${{ github.event.comment.body }}"
          PROMPT="${BODY#'/codex '}"
          echo "Running Codex with prompt: $PROMPT"

          # 建立暫存檔
          TEMP_FILE=$(mktemp)
          echo "Created temporary file: $TEMP_FILE"

          echo "Command to run:"
          echo codex exec --output-last-message \"$TEMP_FILE\" \"$PROMPT\"

          # 執行 codex 命令並根據退出碼判斷狀態
          if codex exec --color never --output-last-message "$TEMP_FILE" "$PROMPT"; then
            # 命令成功執行，檢查暫存檔是否有內容
            if [ -s "$TEMP_FILE" ]; then
              # 使用隨機分隔符避免內容衝突
              DELIMITER="EOF_$(date +%s)_$$"
              {
                echo "result<<$DELIMITER"
                cat "$TEMP_FILE"
                echo "" # 確保有換行
                echo "$DELIMITER"
              }

              {
                echo "result<<$DELIMITER"
                cat "$TEMP_FILE"
                echo "" # 確保有換行
                echo "$DELIMITER"
              } >> "$GITHUB_OUTPUT"
            else
              echo "result=No output from Codex command" >> $GITHUB_OUTPUT
            fi
          else
            EXIT_CODE=$?
            echo "result=Error: Codex execution failed with exit code $EXIT_CODE" >> $GITHUB_OUTPUT
          fi

          # 清理暫存檔
          rm -f "$TEMP_FILE"
          echo "Cleaned up temporary file: $TEMP_FILE"
      - name: Comment Codex response
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            **Codex response:**
            ```
            ${{ steps.run-codex.outputs.result }}
            ```